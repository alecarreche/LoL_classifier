create table input_dataset as (
	with kys as (
		select
			matchid,
			win
		from fct_matches
		group by 1,2
	), team_order as (
		select
			*,
			row_number() over(partition by matchid order by random()) as smp
		from kys
	), matches_full as (
		select
			*
		from fct_matches fm
		join team_order
			using(matchid, win)
		join dim_champions dc
			using(championid)
		join dim_champion_mastery dcm
			using(puuid, championid)
	), pivoted as (
		select
			matchid,
			smp,
			win,
			max(case when teamposition = 'TOP' and partype = 'Mana' then 1 else 0 end) as mana_top,
			max(case when teamposition = 'JUNGLE' and partype = 'Mana' then 1 else 0 end) as mana_jg,
			max(case when teamposition = 'MIDDLE' and partype = 'Mana' then 1 else 0 end) as mana_mid,
			max(case when teamposition = 'BOTTOM' and partype = 'Mana' then 1 else 0 end) as mana_bot,
			max(case when teamposition = 'UTILITY' and partype = 'Mana' then 1 else 0 end) as mana_utility,
			max(case when teamposition = 'TOP' then attack else null end) as attack_top,
			max(case when teamposition = 'JUNGLE' then attack else null end) as attack_jg,
			max(case when teamposition = 'MIDDLE' then attack else null end) as attack_mid,
			max(case when teamposition = 'BOTTOM' then attack else null end) as attack_bot,
			max(case when teamposition = 'UTILITY' then attack else null end) as attack_utility,
			max(case when teamposition = 'TOP' then defense else null end) as defense_top,
			max(case when teamposition = 'JUNGLE' then defense else null end) as defense_jg,
			max(case when teamposition = 'MIDDLE' then defense else null end) as defense_mid,
			max(case when teamposition = 'BOTTOM' then defense else null end) as defense_bot,
			max(case when teamposition = 'UTILITY' then defense else null end) as defense_utility,
			max(case when teamposition = 'TOP' then magic else null end) as magic_top,
			max(case when teamposition = 'JUNGLE' then magic else null end) as magic_jg,
			max(case when teamposition = 'MIDDLE' then magic else null end) as magic_mid,
			max(case when teamposition = 'BOTTOM' then magic else null end) as magic_bot,
			max(case when teamposition = 'UTILITY' then magic else null end) as magic_utility,
			max(case when teamposition = 'TOP' then difficulty else null end) as difficulty_top,
			max(case when teamposition = 'JUNGLE' then difficulty else null end) as difficulty_jg,
			max(case when teamposition = 'MIDDLE' then difficulty else null end) as difficulty_mid,
			max(case when teamposition = 'BOTTOM' then difficulty else null end) as difficulty_bot,
			max(case when teamposition = 'UTILITY' then difficulty else null end) as difficulty_utility,
			max(case when teamposition = 'TOP' then hp else null end) as hp_top,
			max(case when teamposition = 'JUNGLE' then hp else null end) as hp_jg,
			max(case when teamposition = 'MIDDLE' then hp else null end) as hp_mid,
			max(case when teamposition = 'BOTTOM' then hp else null end) as hp_bot,
			max(case when teamposition = 'UTILITY' then hp else null end) as hp_utility,
			max(case when teamposition = 'TOP' then hpperlevel else null end) as hpperlevel_top,
			max(case when teamposition = 'JUNGLE' then hpperlevel else null end) as hpperlevel_jg,
			max(case when teamposition = 'MIDDLE' then hpperlevel else null end) as hpperlevel_mid,
			max(case when teamposition = 'BOTTOM' then hpperlevel else null end) as hpperlevel_bot,
			max(case when teamposition = 'UTILITY' then hpperlevel else null end) as hpperlevel_utility,
			max(case when teamposition = 'TOP' then mp else null end) as mp_top,
			max(case when teamposition = 'JUNGLE' then mp else null end) as mp_jg,
			max(case when teamposition = 'MIDDLE' then mp else null end) as mp_mid,
			max(case when teamposition = 'BOTTOM' then mp else null end) as mp_bot,
			max(case when teamposition = 'UTILITY' then mp else null end) as mp_utility,
			max(case when teamposition = 'TOP' then mpperlevel else null end) as mpperlevel_top,
			max(case when teamposition = 'JUNGLE' then mpperlevel else null end) as mpperlevel_jg,
			max(case when teamposition = 'MIDDLE' then mpperlevel else null end) as mpperlevel_mid,
			max(case when teamposition = 'BOTTOM' then mpperlevel else null end) as mpperlevel_bot,
			max(case when teamposition = 'UTILITY' then mpperlevel else null end) as mpperlevel_utility,
			max(case when teamposition = 'TOP' then movespeed else null end) as movespeed_top,
			max(case when teamposition = 'JUNGLE' then movespeed else null end) as movespeed_jg,
			max(case when teamposition = 'MIDDLE' then movespeed else null end) as movespeed_mid,
			max(case when teamposition = 'BOTTOM' then movespeed else null end) as movespeed_bot,
			max(case when teamposition = 'UTILITY' then movespeed else null end) as movespeed_utility,
			max(case when teamposition = 'TOP' then armor else null end) as armor_top,
			max(case when teamposition = 'JUNGLE' then armor else null end) as armor_jg,
			max(case when teamposition = 'MIDDLE' then armor else null end) as armor_mid,
			max(case when teamposition = 'BOTTOM' then armor else null end) as armor_bot,
			max(case when teamposition = 'UTILITY' then armor else null end) as armor_utility,
			max(case when teamposition = 'TOP' then armorperlevel else null end) as armorperlevel_top,
			max(case when teamposition = 'JUNGLE' then armorperlevel else null end) as armorperlevel_jg,
			max(case when teamposition = 'MIDDLE' then armorperlevel else null end) as armorperlevel_mid,
			max(case when teamposition = 'BOTTOM' then armorperlevel else null end) as armorperlevel_bot,
			max(case when teamposition = 'UTILITY' then armorperlevel else null end) as armorperlevel_utility,
			max(case when teamposition = 'TOP' then spellblock else null end) as spellblock_top,
			max(case when teamposition = 'JUNGLE' then spellblock else null end) as spellblock_jg,
			max(case when teamposition = 'MIDDLE' then spellblock else null end) as spellblock_mid,
			max(case when teamposition = 'BOTTOM' then spellblock else null end) as spellblock_bot,
			max(case when teamposition = 'UTILITY' then spellblock else null end) as spellblock_utility,
			max(case when teamposition = 'TOP' then spellblockperlevel else null end) as spellblockperlevel_top,
			max(case when teamposition = 'JUNGLE' then spellblockperlevel else null end) as spellblockperlevel_jg,
			max(case when teamposition = 'MIDDLE' then spellblockperlevel else null end) as spellblockperlevel_mid,
			max(case when teamposition = 'BOTTOM' then spellblockperlevel else null end) as spellblockperlevel_bot,
			max(case when teamposition = 'UTILITY' then spellblockperlevel else null end) as spellblockperlevel_utility,
			max(case when teamposition = 'TOP' then attackrange else null end) as attackrange_top,
			max(case when teamposition = 'JUNGLE' then attackrange else null end) as attackrange_jg,
			max(case when teamposition = 'MIDDLE' then attackrange else null end) as attackrange_mid,
			max(case when teamposition = 'BOTTOM' then attackrange else null end) as attackrange_bot,
			max(case when teamposition = 'UTILITY' then attackrange else null end) as attackrange_utility,
			max(case when teamposition = 'TOP' then hpregen else null end) as hpregen_top,
			max(case when teamposition = 'JUNGLE' then hpregen else null end) as hpregen_jg,
			max(case when teamposition = 'MIDDLE' then hpregen else null end) as hpregen_mid,
			max(case when teamposition = 'BOTTOM' then hpregen else null end) as hpregen_bot,
			max(case when teamposition = 'UTILITY' then hpregen else null end) as hpregen_utility,
			max(case when teamposition = 'TOP' then hpregenperlevel else null end) as hpregenperlevel_top,
			max(case when teamposition = 'JUNGLE' then hpregenperlevel else null end) as hpregenperlevel_jg,
			max(case when teamposition = 'MIDDLE' then hpregenperlevel else null end) as hpregenperlevel_mid,
			max(case when teamposition = 'BOTTOM' then hpregenperlevel else null end) as hpregenperlevel_bot,
			max(case when teamposition = 'UTILITY' then hpregenperlevel else null end) as hpregenperlevel_utility,
			max(case when teamposition = 'TOP' then mpregen else null end) as mpregen_top,
			max(case when teamposition = 'JUNGLE' then mpregen else null end) as mpregen_jg,
			max(case when teamposition = 'MIDDLE' then mpregen else null end) as mpregen_mid,
			max(case when teamposition = 'BOTTOM' then mpregen else null end) as mpregen_bot,
			max(case when teamposition = 'UTILITY' then mpregen else null end) as mpregen_utility,
			max(case when teamposition = 'TOP' then mpregenperlevel else null end) as mpregenperlevel_top,
			max(case when teamposition = 'JUNGLE' then mpregenperlevel else null end) as mpregenperlevel_jg,
			max(case when teamposition = 'MIDDLE' then mpregenperlevel else null end) as mpregenperlevel_mid,
			max(case when teamposition = 'BOTTOM' then mpregenperlevel else null end) as mpregenperlevel_bot,
			max(case when teamposition = 'UTILITY' then mpregenperlevel else null end) as mpregenperlevel_utility,
			max(case when teamposition = 'TOP' then crit else null end) as crit_top,
			max(case when teamposition = 'JUNGLE' then crit else null end) as crit_jg,
			max(case when teamposition = 'MIDDLE' then crit else null end) as crit_mid,
			max(case when teamposition = 'BOTTOM' then crit else null end) as crit_bot,
			max(case when teamposition = 'UTILITY' then crit else null end) as crit_utility,
			max(case when teamposition = 'TOP' then critperlevel else null end) as critperlevel_top,
			max(case when teamposition = 'JUNGLE' then critperlevel else null end) as critperlevel_jg,
			max(case when teamposition = 'MIDDLE' then critperlevel else null end) as critperlevel_mid,
			max(case when teamposition = 'BOTTOM' then critperlevel else null end) as critperlevel_bot,
			max(case when teamposition = 'UTILITY' then critperlevel else null end) as critperlevel_utility,
			max(case when teamposition = 'TOP' then attackdamage else null end) as attackdamage_top,
			max(case when teamposition = 'JUNGLE' then attackdamage else null end) as attackdamage_jg,
			max(case when teamposition = 'MIDDLE' then attackdamage else null end) as attackdamage_mid,
			max(case when teamposition = 'BOTTOM' then attackdamage else null end) as attackdamage_bot,
			max(case when teamposition = 'UTILITY' then attackdamage else null end) as attackdamage_utility,
			max(case when teamposition = 'TOP' then attackdamageperlevel else null end) as attackdamageperlevel_top,
			max(case when teamposition = 'JUNGLE' then attackdamageperlevel else null end) as attackdamageperlevel_jg,
			max(case when teamposition = 'MIDDLE' then attackdamageperlevel else null end) as attackdamageperlevel_mid,
			max(case when teamposition = 'BOTTOM' then attackdamageperlevel else null end) as attackdamageperlevel_bot,
			max(case when teamposition = 'UTILITY' then attackdamageperlevel else null end) as attackdamageperlevel_utility,
			max(case when teamposition = 'TOP' then attackspeed else null end) as attackspeed_top,
			max(case when teamposition = 'JUNGLE' then attackspeed else null end) as attackspeed_jg,
			max(case when teamposition = 'MIDDLE' then attackspeed else null end) as attackspeed_mid,
			max(case when teamposition = 'BOTTOM' then attackspeed else null end) as attackspeed_bot,
			max(case when teamposition = 'UTILITY' then attackspeed else null end) as attackspeed_utility,
			max(case when teamposition = 'TOP' then attackspeedperlevel else null end) as attackspeedperlevel_top,
			max(case when teamposition = 'JUNGLE' then attackspeedperlevel else null end) as attackspeedperlevel_jg,
			max(case when teamposition = 'MIDDLE' then attackspeedperlevel else null end) as attackspeedperlevel_mid,
			max(case when teamposition = 'BOTTOM' then attackspeedperlevel else null end) as attackspeedperlevel_bot,
			max(case when teamposition = 'UTILITY' then attackspeedperlevel else null end) as attackspeedperlevel_utility,
			max(case when teamposition = 'TOP' then championpoints else null end) as championpoints_top,
			max(case when teamposition = 'JUNGLE' then championpoints else null end) as championpoints_jg,
			max(case when teamposition = 'MIDDLE' then championpoints else null end) as championpoints_mid,
			max(case when teamposition = 'BOTTOM' then championpoints else null end) as championpoints_bot,
			max(case when teamposition = 'UTILITY' then championpoints else null end) as championpoints_utility
		from matches_full
		group by 1,2,3
	)
	select
		t1.matchid,
		t1.mana_top - t2.mana_top as mana_top,
		t1.mana_jg - t2.mana_jg as mana_jg,
		t1.mana_mid - t2.mana_mid as mana_mid,
		t1.mana_bot - t2.mana_bot as mana_bot,
		t1.mana_utility - t2.mana_utility as mana_utility,
		t1.attack_top - t2.attack_top as attack_top,
		t1.attack_jg - t2.attack_jg as attack_jg,
		t1.attack_mid - t2.attack_mid as attack_mid,
		t1.attack_bot - t2.attack_bot as attack_bot,
		t1.attack_utility - t2.attack_utility as attack_utility,
		t1.defense_top - t2.defense_top as defense_top,
		t1.defense_jg - t2.defense_jg as defense_jg,
		t1.defense_mid - t2.defense_mid as defense_mid,
		t1.defense_bot - t2.defense_bot as defense_bot,
		t1.defense_utility - t2.defense_utility as defense_utility,
		t1.magic_top - t2.magic_top as magic_top,
		t1.magic_jg - t2.magic_jg as magic_jg,
		t1.magic_mid - t2.magic_mid as magic_mid,
		t1.magic_bot - t2.magic_bot as magic_bot,
		t1.magic_utility - t2.magic_utility as magic_utility,
		t1.difficulty_top - t2.difficulty_top as difficulty_top,
		t1.difficulty_jg - t2.difficulty_jg as difficulty_jg,
		t1.difficulty_mid - t2.difficulty_mid as difficulty_mid,
		t1.difficulty_bot - t2.difficulty_bot as difficulty_bot,
		t1.difficulty_utility - t2.difficulty_utility as difficulty_utility,
		t1.hp_top - t2.hp_top as hp_top,
		t1.hp_jg - t2.hp_jg as hp_jg,
		t1.hp_mid - t2.hp_mid as hp_mid,
		t1.hp_bot - t2.hp_bot as hp_bot,
		t1.hp_utility - t2.hp_utility as hp_utility,
		t1.hpperlevel_top - t2.hpperlevel_top as hpperlevel_top,
		t1.hpperlevel_jg - t2.hpperlevel_jg as hpperlevel_jg,
		t1.hpperlevel_mid - t2.hpperlevel_mid as hpperlevel_mid,
		t1.hpperlevel_bot - t2.hpperlevel_bot as hpperlevel_bot,
		t1.hpperlevel_utility - t2.hpperlevel_utility as hpperlevel_utility,
		t1.mp_top - t2.mp_top as mp_top,
		t1.mp_jg - t2.mp_jg as mp_jg,
		t1.mp_mid - t2.mp_mid as mp_mid,
		t1.mp_bot - t2.mp_bot as mp_bot,
		t1.mp_utility - t2.mp_utility as mp_utility,
		t1.mpperlevel_top - t2.mpperlevel_top as mpperlevel_top,
		t1.mpperlevel_jg - t2.mpperlevel_jg as mpperlevel_jg,
		t1.mpperlevel_mid - t2.mpperlevel_mid as mpperlevel_mid,
		t1.mpperlevel_bot - t2.mpperlevel_bot as mpperlevel_bot,
		t1.mpperlevel_utility - t2.mpperlevel_utility as mpperlevel_utility,
		t1.movespeed_top - t2.movespeed_top as movespeed_top,
		t1.movespeed_jg - t2.movespeed_jg as movespeed_jg,
		t1.movespeed_mid - t2.movespeed_mid as movespeed_mid,
		t1.movespeed_bot - t2.movespeed_bot as movespeed_bot,
		t1.movespeed_utility - t2.movespeed_utility as movespeed_utility,
		t1.armor_top - t2.armor_top as armor_top,
		t1.armor_jg - t2.armor_jg as armor_jg,
		t1.armor_mid - t2.armor_mid as armor_mid,
		t1.armor_bot - t2.armor_bot as armor_bot,
		t1.armor_utility - t2.armor_utility as armor_utility,
		t1.armorperlevel_top - t2.armorperlevel_top as armorperlevel_top,
		t1.armorperlevel_jg - t2.armorperlevel_jg as armorperlevel_jg,
		t1.armorperlevel_mid - t2.armorperlevel_mid as armorperlevel_mid,
		t1.armorperlevel_bot - t2.armorperlevel_bot as armorperlevel_bot,
		t1.armorperlevel_utility - t2.armorperlevel_utility as armorperlevel_utility,
		t1.spellblock_top - t2.spellblock_top as spellblock_top,
		t1.spellblock_jg - t2.spellblock_jg as spellblock_jg,
		t1.spellblock_mid - t2.spellblock_mid as spellblock_mid,
		t1.spellblock_bot - t2.spellblock_bot as spellblock_bot,
		t1.spellblock_utility - t2.spellblock_utility as spellblock_utility,
		t1.spellblockperlevel_top - t2.spellblockperlevel_top as spellblockperlevel_top,
		t1.spellblockperlevel_jg - t2.spellblockperlevel_jg as spellblockperlevel_jg,
		t1.spellblockperlevel_mid - t2.spellblockperlevel_mid as spellblockperlevel_mid,
		t1.spellblockperlevel_bot - t2.spellblockperlevel_bot as spellblockperlevel_bot,
		t1.spellblockperlevel_utility - t2.spellblockperlevel_utility as spellblockperlevel_utility,
		t1.attackrange_top - t2.attackrange_top as attackrange_top,
		t1.attackrange_jg - t2.attackrange_jg as attackrange_jg,
		t1.attackrange_mid - t2.attackrange_mid as attackrange_mid,
		t1.attackrange_bot - t2.attackrange_bot as attackrange_bot,
		t1.attackrange_utility - t2.attackrange_utility as attackrange_utility,
		t1.hpregen_top - t2.hpregen_top as hpregen_top,
		t1.hpregen_jg - t2.hpregen_jg as hpregen_jg,
		t1.hpregen_mid - t2.hpregen_mid as hpregen_mid,
		t1.hpregen_bot - t2.hpregen_bot as hpregen_bot,
		t1.hpregen_utility - t2.hpregen_utility as hpregen_utility,
		t1.hpregenperlevel_top - t2.hpregenperlevel_top as hpregenperlevel_top,
		t1.hpregenperlevel_jg - t2.hpregenperlevel_jg as hpregenperlevel_jg,
		t1.hpregenperlevel_mid - t2.hpregenperlevel_mid as hpregenperlevel_mid,
		t1.hpregenperlevel_bot - t2.hpregenperlevel_bot as hpregenperlevel_bot,
		t1.hpregenperlevel_utility - t2.hpregenperlevel_utility as hpregenperlevel_utility,
		t1.mpregen_top - t2.mpregen_top as mpregen_top,
		t1.mpregen_jg - t2.mpregen_jg as mpregen_jg,
		t1.mpregen_mid - t2.mpregen_mid as mpregen_mid,
		t1.mpregen_bot - t2.mpregen_bot as mpregen_bot,
		t1.mpregen_utility - t2.mpregen_utility as mpregen_utility,
		t1.mpregenperlevel_top - t2.mpregenperlevel_top as mpregenperlevel_top,
		t1.mpregenperlevel_jg - t2.mpregenperlevel_jg as mpregenperlevel_jg,
		t1.mpregenperlevel_mid - t2.mpregenperlevel_mid as mpregenperlevel_mid,
		t1.mpregenperlevel_bot - t2.mpregenperlevel_bot as mpregenperlevel_bot,
		t1.mpregenperlevel_utility - t2.mpregenperlevel_utility as mpregenperlevel_utility,
		t1.crit_top - t2.crit_top as crit_top,
		t1.crit_jg - t2.crit_jg as crit_jg,
		t1.crit_mid - t2.crit_mid as crit_mid,
		t1.crit_bot - t2.crit_bot as crit_bot,
		t1.crit_utility - t2.crit_utility as crit_utility,
		t1.critperlevel_top - t2.critperlevel_top as critperlevel_top,
		t1.critperlevel_jg - t2.critperlevel_jg as critperlevel_jg,
		t1.critperlevel_mid - t2.critperlevel_mid as critperlevel_mid,
		t1.critperlevel_bot - t2.critperlevel_bot as critperlevel_bot,
		t1.critperlevel_utility - t2.critperlevel_utility as critperlevel_utility,
		t1.attackdamage_top - t2.attackdamage_top as attackdamage_top,
		t1.attackdamage_jg - t2.attackdamage_jg as attackdamage_jg,
		t1.attackdamage_mid - t2.attackdamage_mid as attackdamage_mid,
		t1.attackdamage_bot - t2.attackdamage_bot as attackdamage_bot,
		t1.attackdamage_utility - t2.attackdamage_utility as attackdamage_utility,
		t1.attackdamageperlevel_top - t2.attackdamageperlevel_top as attackdamageperlevel_top,
		t1.attackdamageperlevel_jg - t2.attackdamageperlevel_jg as attackdamageperlevel_jg,
		t1.attackdamageperlevel_mid - t2.attackdamageperlevel_mid as attackdamageperlevel_mid,
		t1.attackdamageperlevel_bot - t2.attackdamageperlevel_bot as attackdamageperlevel_bot,
		t1.attackdamageperlevel_utility - t2.attackdamageperlevel_utility as attackdamageperlevel_utility,
		t1.attackspeed_top - t2.attackspeed_top as attackspeed_top,
		t1.attackspeed_jg - t2.attackspeed_jg as attackspeed_jg,
		t1.attackspeed_mid - t2.attackspeed_mid as attackspeed_mid,
		t1.attackspeed_bot - t2.attackspeed_bot as attackspeed_bot,
		t1.attackspeed_utility - t2.attackspeed_utility as attackspeed_utility,
		t1.attackspeedperlevel_top - t2.attackspeedperlevel_top as attackspeedperlevel_top,
		t1.attackspeedperlevel_jg - t2.attackspeedperlevel_jg as attackspeedperlevel_jg,
		t1.attackspeedperlevel_mid - t2.attackspeedperlevel_mid as attackspeedperlevel_mid,
		t1.attackspeedperlevel_bot - t2.attackspeedperlevel_bot as attackspeedperlevel_bot,
		t1.attackspeedperlevel_utility - t2.attackspeedperlevel_utility as attackspeedperlevel_utility,
		t1.championpoints_top - t2.championpoints_top as championpoints_top,
		t1.championpoints_jg - t2.championpoints_jg as championpoints_jg,
		t1.championpoints_mid - t2.championpoints_mid as championpoints_mid,
		t1.championpoints_bot - t2.championpoints_bot as championpoints_bot,
		t1.championpoints_utility - t2.championpoints_utility as championpoints_utility,
		t1.win
	from (select * from pivoted where smp = 1) as t1
	join (select * from pivoted where smp = 2) as t2
		using(matchid)
);